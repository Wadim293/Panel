import asyncio
import json
from sqlalchemy import select
from db import engine, Session, Base
from models import Template

async def create_default_templates():
    async with Session() as session:
        # === –ü–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω (–Ω–µ–π—Ä–æ—Å–µ—Ç–∏) ===
        existing_template1 = await session.scalar(
            select(Template).where(Template.name == "üéì –®–∞–±–ª–æ–Ω (–Ω–µ–π—Ä–æ—Å–µ—Ç–∏)")
        )
        if not existing_template1:
            template1 = Template(
                name="üéì –®–∞–±–ª–æ–Ω (–Ω–µ–π—Ä–æ—Å–µ—Ç–∏)",
                after_start=(
                    "<b>–ü—Ä–∏–≤–µ—Ç! üëã</b> –≠—Ç–æ—Ç –±–æ—Ç –¥–∞—ë—Ç –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ <b>–ª—É—á—à–∏–º –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º</b> –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –≤–∏–¥–µ–æ –∏ –ø–µ—Å–µ–Ω.\n\n"
                    "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:</b> OpenAI o1, o3 mini, GPT 4o, DeepSeek, Claude 3.7, /Midjourney, /StableDiffusion, Flux, Kling, /Suno, Perplexity –∏ –¥—Ä—É–≥–∏–µ.\n\n"
                    "<b>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ:</b> GPT 4o mini –∏ Gemini 1.5 Pro.\n\n"
                    "<b>–ß–∞—Ç–±–æ—Ç —É–º–µ–µ—Ç:</b>\n"
                    "‚Ä¢ <b>–ü–∏—Å–∞—Ç—å –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç—ã</b> üìù\n"
                    "‚Ä¢ <b>–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –≤–∏–¥–µ–æ</b> üåÖüé¨\n"
                    "‚Ä¢ <b>–†–∞–±–æ—Ç–∞—Ç—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏</b> üóÇ\n"
                    "‚Ä¢ <b>–ü–∏—Å–∞—Ç—å –∏ –ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥</b> ‚å®Ô∏è\n"
                    "‚Ä¢ <b>–†–µ—à–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏</b> üßÆ\n"
                    "‚Ä¢ <b>–°–æ–∑–¥–∞–≤–∞—Ç—å –º—É–∑—ã–∫—É –∏ –ø–µ—Å–Ω–∏</b> üé∏\n"
                    "‚Ä¢ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ñ–æ—Ç–æ</b> üñå\n"
                    "‚Ä¢ <b>–ü–∏—Å–∞—Ç—å –¥–∏–ø–ª–æ–º—ã, –∫—É—Ä—Å–æ–≤—ã–µ, —ç—Å—Å–µ, –∫–Ω–∏–≥–∏ –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏</b> üéì\n"
                    "‚Ä¢ <b>–û–∑–≤—É—á–∏–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –∞—É–¥–∏–æ</b> üéô\n\n"
                    "<i>–í–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å –Ω–∏–∂–µ, —è –æ—Ç–≤–µ—á—É –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å! üëá</i>"
                ),
                non_premium_text=None,
                is_default=True,
                reply_markup=json.dumps([
                    {"text": "üß† –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç"},
                    {"text": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"}
                ])
            )
            session.add(template1)

        # === –í—Ç–æ—Ä–æ–π —à–∞–±–ª–æ–Ω (—Ä—É–ª–µ—Ç–∫–∞) ===
        existing_template2 = await session.scalar(
            select(Template).where(Template.name == "üé∞ –®–∞–±–ª–æ–Ω (—Ä—É–ª–µ—Ç–∫–∞)")
        )
        if not existing_template2:
            template2 = Template(
                name="üé∞ –®–∞–±–ª–æ–Ω (—Ä—É–ª–µ—Ç–∫–∞)",
                after_start=(
                    "<b>üéâ –†–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!</b>\n\n"
                    "–ß—Ç–æ–±—ã <b>–∫—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É</b>, –∑–∞–±–∏—Ä–∞—Ç—å –ø—Ä–∏–∑—ã\n"
                    "–∏ –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã ‚Äî –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.\n\n"
                    "‚ûñ –ü–µ—Ä–µ–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª <b>üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b> –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è –≤ –±–æ—Ç–µ.\n\n"
                    "‚ûñ –ü–æ—Å–ª–µ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å:\n"
                    "  ‚Ä¢ <b>üéÅ –ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî 150 ‚≠êÔ∏è</b>\n"
                    "  ‚Ä¢ <b>–î–æ—Å—Ç—É–ø –∫ –∏–≥—Ä–µ</b> –∏ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Ä—É–ª–µ—Ç–∫–∏!\n\n"
                    "<i>‚è±Ô∏è –≠—Ç–æ –∑–∞–π–º—ë—Ç –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã, –Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç –º–∞–∫—Å–∏–º—É–º —Ñ–∞–Ω–∞!</i>"
                ),
                non_premium_text=None,
                is_default=True,
                photo_url="https://i.ibb.co/Dg9sQw1F/photo-2025-06-28-20-21-42.jpg",
                reply_markup=json.dumps([
                    {"text": "üé∞ –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É", "callback_data": "spin"},
                    {"text": "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "callback_data": "instructions"}
                ])
            )
            session.add(template2)

        # === –¢—Ä–µ—Ç–∏–π —à–∞–±–ª–æ–Ω (–ö–∞–∑–∏–Ω–æ) ===
        existing_template3 = await session.scalar(
            select(Template).where(Template.name == "üéÅ –®–∞–±–ª–æ–Ω (–ö–∞–∑–∏–Ω–æ)")
        )
        if not existing_template3:
            template3 = Template(
                name="üéÅ –®–∞–±–ª–æ–Ω (–ö–∞–∑–∏–Ω–æ)",
                after_start=(
                    "<b>üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤</b>\n"
                    "–ó–¥–µ—Å—å –≤—Å—ë –ø—Ä–æ—Å—Ç–æ: –∫—Ç–æ –≤—ã–±—Ä–æ—Å–∏–ª –±–æ–ª—å—à–µ ‚Äî —Ç–æ—Ç –∏ –∑–∞–±—Ä–∞–ª –ø—Ä–∏–∑! üí•\n\n"
                    "üïπ –ü—Ä–∞–≤–∏–ª–∞:\n"
                    "üé≤ –°–Ω–∞—á–∞–ª–∞ —Ç—ã –±—Ä–æ—Å–∞–µ—à—å –∫—É–±–∏–∫.\n"
                    "üë±‚Äç‚ôÇÔ∏è –ó–∞—Ç–µ–º –±—Ä–æ—Å–∞–µ—Ç –∫—É–± —Ç–≤–æ–π —Å–æ–ø–µ—Ä–Ω–∏–∫\n"
                    "üîù –£ –∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—à–µ ‚Äî —Ç–æ—Ç –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç!\n\n"
                    "üéÅ –ù–∞–≥—Ä–∞–¥–∞:\n"
                    "–°—Ç–∞–≤–∫–∞ —Ç–≤–æ–µ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞\n\n"
                    "üî• –ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É!\n"
                    "–ú–æ–∂–µ—Ç, –∏–º–µ–Ω–Ω–æ —Å–µ–≥–æ–¥–Ω—è —Ç—ã –≤—ã–∫–∏–Ω–µ—à—å —à–µ—Å—Ç—å –∏ —Å–æ—Ä–≤—ë—à—å –∫—É—à! üé≤üí∏\n\n"
                    "üéØ –ñ–º–∏ \"üçÄ—Å—ã–≥—Ä–∞—Ç—å\" –∏ –Ω–∞—á–Ω—ë–º!"
                ),
                non_premium_text=None,
                is_default=True,
                reply_markup=json.dumps([
                    {"text": "üçÄ—Å—ã–≥—Ä–∞—Ç—å", "callback_data": "prize_spin"}
                ])
            )
            session.add(template3)

        # === –ù–æ–≤—ã–π —à–∞–±–ª–æ–Ω GiftSPIN ===
        existing_template4 = await session.scalar(
            select(Template).where(Template.name == "üéÅ NFT‚Äì–†—É–ª–µ—Ç–∫–∞")
        )
        if not existing_template4:
            template4 = Template(
                name="üéÅ NFT‚Äì–†—É–ª–µ—Ç–∫–∞",
                after_start=(
                    "<b>üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
                    "‚ú® –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ –∑–∞ —ç—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ <b>1 –í—Ä–∞—â–µ–Ω–∏–µ!</b> ‚ú®\n\n"
                    "<b>–ß—Ç–æ —Ç—É—Ç –¥–µ–ª–∞—Ç—å?:</b>\n"
                    "1Ô∏è‚É£ –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É\n"
                    "2Ô∏è‚É£ –ü–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ NFT-–ø–æ–¥–∞—Ä–∫–∏\n"
                    "3Ô∏è‚É£ –í—ã–≤–æ–¥–∏—Ç—å –∏—Ö –≤ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!\n\n"
                    "–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å - –∏ –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å –í–´–ò–ì–†–ê–¢–¨!"
                ),
                non_premium_text=None,
                is_default=True,
                reply_markup=json.dumps([
                    {"text": "üèõ –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É", "callback_data": "spin"},
                    {"text": "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "callback_data": "instructions"},
                    {"text": "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", "callback_data": "inventory"}
                ])
            )
            session.add(template4)

        await session.commit()
        print("‚úÖ –ë–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

async def main():
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    await create_default_templates()

if __name__ == "__main__":
    asyncio.run(main())