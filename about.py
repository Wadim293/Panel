from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

router = Router()

def get_about_text_and_kb():
    text = (
        "<b>üë©üèª‚Äçüíª –û –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ</b>\n\n"
        "<b>üéâ –ú—ã –æ—Ç–∫—Ä—ã–ª–∏—Å—å 1 –∏—é–ª—è 2025</b>\n"
        "<b>‚òïÔ∏è –ù–∞—à –ø—Ä–æ–µ–∫—Ç –±–µ—Ä–µ—Ç –∫–æ–º–∏—Å—Å–∏—é ‚Äî –∫–∞–∂–¥–∞—è 4-—è NFT –∏–¥–µ—Ç –∞–¥–º–∏–Ω—É</b>\n\n"
        "<b>‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–Ω–µ–ª–∏: üü¢ WORK</b>"
    )
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìñ –ú–∞–Ω—É–∞–ª—ã", url="https://teletype.in/@bebe3414/fV4zvOsPKOs")],
        [
            InlineKeyboardButton(text="üëë –ü—Ä–∞–≤–∏–ª–∞", callback_data="show_rules"),
            InlineKeyboardButton(text="‚ô£Ô∏è –ê–¥–º–∏–Ω (—Ç—Å)", url="https://t.me/Persilf")
        ],
        [
            InlineKeyboardButton(text="üí¨ –ß–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤", url="https://t.me/+Y-csslTe-mtjYzZi")
        ],
        [
            InlineKeyboardButton(text="üí∏ –î–µ–ø–æ–∑–∏—Ç—ã", url="https://t.me/+czlUaC-SHldkOGNi"),
            InlineKeyboardButton(text="üîé –ü–∞—Ä—Å–µ—Ä NFT", url="https://t.me/Pasesdsbot")
        ],
        [InlineKeyboardButton(text="‚ö°Ô∏è –û—Ç—Å—Ç—É–∫", url="https://t.me/AlphaSsquadBot")]
    ])
    return text, kb

@router.message(F.text == "üë©üèº‚Äçüíª –û –ø—Ä–æ–µ–∫—Ç–µ")
async def about_handler(message: types.Message):
    if message.chat.type != "private":
        await message.answer("‚õî –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º.")
        return

    text, kb = get_about_text_and_kb()
    await message.answer(text, reply_markup=kb, parse_mode="HTML")

@router.callback_query(F.data == "show_rules")
async def show_rules_handler(callback: types.CallbackQuery):
    text = (
        "<b>üìú –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç–∞</b>\n\n"
        "<b>1.</b> –ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞, —Ñ–ª—É–¥, —Å–ø–∞–º, –∫–æ–º–º–µ—Ä—Ü–∏—è, –ø—Ä–æ–¥–∞–∂–∞ —É—Å–ª—É–≥ –∏–ª–∏ –ª—é–±—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ —á–∞—Ç–µ –≤–æ—Ä–∫–µ—Ä–æ–≤.\n\n"
        "<b>2.</b> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: –≤–æ—Ä–∫–µ—Ä–æ–≤, –∞–¥–º–∏–Ω–æ–≤, –º–æ–¥–µ—Ä–æ–≤, —Ç—Å–æ–≤. "
        "–ù–µ —Ä–∞–∑–≤–æ–¥–∏—Ç–µ —Å—Ä–∞—á –∏ –Ω–µ –≤–µ–¥–∏—Ç–µ —Å–µ–±—è –Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ.\n\n"
        "<b>3.</b> –ü–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ –≤ –ª—é–±–æ–º –≤–∏–¥–µ ‚Äî <b>—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ</b>.\n\n"
        "<b>4.</b> <b>–°–∫–∞–º –∏–ª–∏ –ø–æ–ø—ã—Ç–∫–∏ —Å–∫–∞–º–∞</b> –≤–æ—Ä–∫–µ—Ä–æ–≤ –≤ –ª—é–±–æ–º –≤–∏–¥–µ ‚Äî <u>–º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±–∞–Ω</u>.\n\n"
        "<b>5.</b> <b>–í —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ 18+ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</b> ‚Äî –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –±–∞–Ω.\n\n"
        "<i>–°–æ–±–ª—é–¥–µ–Ω–∏–µ —ç—Ç–∏—Ö –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–∞–≤–∏–ª ‚Äî –∑–∞–ª–æ–≥ —Å–ø–æ–∫–æ–π–Ω–æ–π –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã üëå</i>"
    )

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_about")]
    ])

    await callback.message.edit_text(text, reply_markup=kb, parse_mode="HTML")
    await callback.answer()

@router.callback_query(F.data == "back_to_about")
async def back_to_about(callback: types.CallbackQuery):
    text, kb = get_about_text_and_kb()
    await callback.message.edit_text(text, reply_markup=kb, parse_mode="HTML")
    await callback.answer()